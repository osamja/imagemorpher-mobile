{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/src/components/UploadImagesView.jsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { MorphImageButton } from \"./MorphImageButton\";\nimport { ImageUploadButton } from \"./ImageUploadButton\";\nimport { MorphSequenceButton } from \"./MorphSequenceButton\";\nimport { Switch } from 'react-native-paper';\nexport function UploadImagesView(_ref) {\n  var _this = this;\n\n  var firstImageRef = _ref.firstImageRef,\n      setFirstImageRef = _ref.setFirstImageRef,\n      secondImageRef = _ref.secondImageRef,\n      setSecondImageRef = _ref.setSecondImageRef,\n      morphImageResponse = _ref.morphImageResponse,\n      setMorphImageResponse = _ref.setMorphImageResponse;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isGif = _useState2[0],\n      setIsGif = _useState2[1];\n\n  var morphImgBtn = function morphImgBtn() {\n    return React.createElement(MorphImageButton, {\n      firstImageRef: firstImageRef,\n      secondImageRef: secondImageRef,\n      morphImageResponse: morphImageResponse,\n      setFirstImageRef: setFirstImageRef,\n      setSecondImageRef: setSecondImageRef,\n      setMorphImageResponse: setMorphImageResponse,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var morphGifBtn = function morphGifBtn() {\n    return React.createElement(MorphSequenceButton, {\n      firstImageRef: firstImageRef,\n      secondImageRef: secondImageRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.uploadBtns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.firstBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageUploadButton, {\n    imageRef: firstImageRef,\n    setImageRef: setFirstImageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), React.createElement(ImageUploadButton, {\n    imageRef: secondImageRef,\n    setImageRef: setSecondImageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.morphBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, isGif ? morphGifBtn : morphImgBtn, React.createElement(Switch, {\n    value: isGif,\n    onValueChange: setIsGif(!isGif),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  firstBtn: {\n    marginRight: 60\n  },\n  uploadBtns: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  morphBtn: {\n    marginTop: 100,\n    flexDirection: 'row'\n  },\n  reset: {\n    width: 40,\n    height: 40,\n    margin: 25,\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/src/components/UploadImagesView.jsx"],"names":["React","useState","MorphImageButton","ImageUploadButton","MorphSequenceButton","Switch","UploadImagesView","firstImageRef","setFirstImageRef","secondImageRef","setSecondImageRef","morphImageResponse","setMorphImageResponse","isGif","setIsGif","morphImgBtn","morphGifBtn","styles","uploadBtns","firstBtn","morphBtn","StyleSheet","create","marginRight","flexDirection","justifyContent","marginTop","reset","width","height","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet } from 'react-native'\n\nimport { MorphImageButton } from './MorphImageButton'\nimport { ImageUploadButton } from './ImageUploadButton'\nimport { MorphSequenceButton } from './MorphSequenceButton'\nimport { Switch } from 'react-native-paper'\n\nexport function UploadImagesView ({firstImageRef, setFirstImageRef, secondImageRef, setSecondImageRef, morphImageResponse, setMorphImageResponse}) {\n\n  const [isGif, setIsGif] = useState(false)\n\n  const morphImgBtn = () => {\n    return (\n      <MorphImageButton\n      firstImageRef={firstImageRef}\n      secondImageRef={secondImageRef}\n      morphImageResponse={morphImageResponse}\n\n      setFirstImageRef={setFirstImageRef}\n      setSecondImageRef={setSecondImageRef}\n      setMorphImageResponse={setMorphImageResponse}\n      />\n    )\n  }\n\n  const morphGifBtn = () => {\n    return (\n      <MorphSequenceButton\n      firstImageRef={firstImageRef}\n      secondImageRef={secondImageRef}\n    />\n    )\n  }\n\n  return (\n    <View>\n      <View style={styles.uploadBtns}>\n        <View style={styles.firstBtn}>\n          <ImageUploadButton\n            imageRef={firstImageRef}\n            setImageRef={setFirstImageRef}\n          />\n        </View>\n        <ImageUploadButton\n          imageRef={secondImageRef}\n          setImageRef={setSecondImageRef}\n        />\n      </View>\n      <View style={styles.morphBtn}>\n        {isGif ? morphGifBtn : morphImgBtn}\n        <Switch\n          value={isGif}\n          onValueChange={setIsGif(!isGif)}\n        />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  firstBtn: {\n    marginRight: 60,\n  },\n  uploadBtns: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  morphBtn: {\n    marginTop: 100,\n    flexDirection: 'row',\n  },\n  reset: {\n    width: 40,\n    height: 40,\n    margin: 25,\n    justifyContent: 'center',\n  }\n})\n"]},"metadata":{},"sourceType":"module"}