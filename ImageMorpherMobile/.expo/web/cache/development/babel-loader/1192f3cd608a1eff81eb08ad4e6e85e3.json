{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/App.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { MorphImageButton } from \"./src/components/MorphImageButton\";\nimport { MorphSequenceButton } from \"./src/components/MorphSequenceButton\";\nimport { ImageUploadButton } from \"./src/components/ImageUploadButton\";\nimport { useFonts } from 'expo-font';\nimport Home from \"./src/components/Home\";\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      morphedImg = _useState2[0],\n      setMorphedImg = _useState2[1];\n\n  if (!morphedImg) {\n    return React.createElement(Home, {\n      firstImageRef: firstImageRef,\n      secondImageRef: secondImageRef,\n      morphImageResponse: morphImageResponse,\n      setMorphImageResponse: setMorphImageResponse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(ViewMorphedImage, {\n    firstImageRef: firstImageRef,\n    secondImageRef: secondImageRef,\n    morphImageResponse: morphImageResponse,\n    resetMorphState: resetMorphState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1\n  },\n  morphArea: {\n    bottom: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n  title: {\n    marginTop: 30,\n    fontSize: 40,\n    textAlign: 'center',\n    color: '#2b2b2b',\n    fontWeight: 'bold',\n    fontFamily: 'Roboto'\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  reset: {\n    width: 40,\n    height: 40,\n    margin: 25\n  }\n});","map":{"version":3,"sources":["/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/App.js"],"names":["React","useState","LinearGradient","MorphImageButton","MorphSequenceButton","ImageUploadButton","useFonts","Home","App","morphedImg","setMorphedImg","firstImageRef","secondImageRef","morphImageResponse","setMorphImageResponse","resetMorphState","styles","StyleSheet","create","background","flex","morphArea","bottom","justifyContent","alignItems","title","marginTop","fontSize","textAlign","color","fontWeight","fontFamily","container","flexDirection","reset","width","height","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,gBAAT;AACA,SAASC,mBAAT;AACA,SAASC,iBAAT;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,IAAP;AAEA,eAAe,SAASC,GAAT,GAAgB;AAAA,kBAEOP,QAAQ,CAAC,IAAD,CAFf;AAAA;AAAA,MAEtBQ,UAFsB;AAAA,MAEVC,aAFU;;AAI7B,MAAI,CAACD,UAAL,EAAiB;AACf,WACE,oBAAC,IAAD;AACA,MAAA,aAAa,EAAEE,aADf;AAEA,MAAA,cAAc,EAAEC,cAFhB;AAGA,MAAA,kBAAkB,EAAEC,kBAHpB;AAIA,MAAA,qBAAqB,EAAEC,qBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AAGD,SACE,oBAAC,gBAAD;AACA,IAAA,aAAa,EAAEH,aADf;AAEA,IAAA,cAAc,EAAEC,cAFhB;AAGA,IAAA,kBAAkB,EAAEC,kBAHpB;AAIA,IAAA,eAAe,EAAEE,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD;AACD,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE;AADI,GADmB;AAI/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITJ,IAAAA,IAAI,EAAE;AAJG,GAJoB;AAU/BK,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,EADN;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,SAAS,EAAE,QAHN;AAILC,IAAAA,KAAK,EAAE,SAJF;AAKLC,IAAAA,UAAU,EAAE,MALP;AAMLC,IAAAA,UAAU,EAAE;AANP,GAVwB;AAkB/BC,EAAAA,SAAS,EAAE;AACTZ,IAAAA,IAAI,EAAE,CADG;AAETa,IAAAA,aAAa,EAAE;AAFN,GAlBoB;AAwB/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,MAAM,EAAE;AAHH;AAxBwB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Text, View, StyleSheet, TouchableOpacity, Image } from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient'\nimport { MorphImageButton } from './src/components/MorphImageButton'\nimport { MorphSequenceButton } from './src/components/MorphSequenceButton'\nimport { ImageUploadButton } from './src/components/ImageUploadButton'\nimport { useFonts } from 'expo-font'\nimport Home from './src/components/Home'\n\nexport default function App () {\n\n  const [morphedImg, setMorphedImg] = useState(null);\n\n  if (!morphedImg) {\n    return (\n      <Home\n      firstImageRef={firstImageRef}\n      secondImageRef={secondImageRef}\n      morphImageResponse={morphImageResponse}\n      setMorphImageResponse={setMorphImageResponse}\n      />\n    )\n  }\n\n  // If morph image was successful, allow user to generate morph sequence\n  return (\n    <ViewMorphedImage\n    firstImageRef={firstImageRef}\n    secondImageRef={secondImageRef}\n    morphImageResponse={morphImageResponse}\n    resetMorphState={resetMorphState}\n    />\n  )\n}\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1\n  },\n  morphArea: {\n    bottom: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n  title: {\n    marginTop: 30,\n    fontSize: 40,\n    textAlign: 'center',\n    color: '#2b2b2b',\n    fontWeight: 'bold',\n    fontFamily: 'Roboto'\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  reset: {\n    width: 40,\n    height: 40,\n    margin: 25\n  }\n})\n"]},"metadata":{},"sourceType":"module"}