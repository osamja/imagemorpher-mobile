{"ast":null,"code":"var _jsxFileName = \"/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/src/components/views/MorphResponseView.jsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button } from 'react-native-paper';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Analytics from 'expo-firebase-analytics';\nexport function MorphResponseView(_ref) {\n  var firstImageRef = _ref.firstImageRef,\n      setFirstImageRef = _ref.setFirstImageRef,\n      secondImageRef = _ref.secondImageRef,\n      setSecondImageRef = _ref.setSecondImageRef,\n      morphResponse = _ref.morphResponse,\n      setMorphResponse = _ref.setMorphResponse,\n      isGif = _ref.isGif;\n\n  function setInitialMorphState() {\n    setFirstImageRef(null);\n    setSecondImageRef(null);\n    setMorphResponse(null);\n  }\n\n  function getMorphResponse() {\n    Analytics.logEvent('ButtonTapped', {\n      name: isGif ? 'GetMorphSequence' : 'GetMorph',\n      screen: 'main',\n      purpose: 'Begin the morph'\n    });\n    WebBrowser.openBrowserAsync(morphResponse.toString());\n  }\n\n  return React.createElement(View, {\n    style: styles.morphBtnArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    mode: \"outlined\",\n    color: \"white\",\n    onPress: function onPress() {\n      return getMorphResponse;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"View \", isGif ? 'GIF' : 'Image')), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    mode: \"outlined\",\n    color: \"white\",\n    onPress: function onPress() {\n      return setInitialMorphState();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Restart\")));\n}\nvar styles = StyleSheet.create({\n  button: {\n    marginTop: 40,\n    marginBottom: 40,\n    width: 200\n  }\n});","map":{"version":3,"sources":["/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/src/components/views/MorphResponseView.jsx"],"names":["React","Button","WebBrowser","Analytics","MorphResponseView","firstImageRef","setFirstImageRef","secondImageRef","setSecondImageRef","morphResponse","setMorphResponse","isGif","setInitialMorphState","getMorphResponse","logEvent","name","screen","purpose","openBrowserAsync","toString","styles","morphBtnArea","button","StyleSheet","create","marginTop","marginBottom","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,OAAO,KAAKC,SAAZ,MAA2B,yBAA3B;AAEA,OAAO,SAASC,iBAAT,OAAyI;AAAA,MAA7GC,aAA6G,QAA7GA,aAA6G;AAAA,MAA9FC,gBAA8F,QAA9FA,gBAA8F;AAAA,MAA5EC,cAA4E,QAA5EA,cAA4E;AAAA,MAA5DC,iBAA4D,QAA5DA,iBAA4D;AAAA,MAAzCC,aAAyC,QAAzCA,aAAyC;AAAA,MAA1BC,gBAA0B,QAA1BA,gBAA0B;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AAE9I,WAASC,oBAAT,GAAiC;AAC/BN,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAE,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;;AAED,WAASG,gBAAT,GAA4B;AAC1BV,IAAAA,SAAS,CAACW,QAAV,CAAmB,cAAnB,EAAmC;AAC/BC,MAAAA,IAAI,EAAGJ,KAAK,GAAG,kBAAH,GAAwB,UADL;AAE/BK,MAAAA,MAAM,EAAE,MAFuB;AAG/BC,MAAAA,OAAO,EAAE;AAHsB,KAAnC;AAKEf,IAAAA,UAAU,CAACgB,gBAAX,CAA4BT,aAAa,CAACU,QAAd,EAA5B;AACH;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,KAAK,EAAC,OAA9B;AAAsC,IAAA,OAAO,EAAE;AAAA,aAAMT,gBAAN;AAAA,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQF,KAAK,GAAG,KAAH,GAAW,OADxB,CADF,CADF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,KAAK,EAAC,OAA9B;AAAsC,IAAA,OAAO,EAAE;AAAA,aAAMV,oBAAoB,EAA1B;AAAA,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CANF,CADF;AAcD;AAED,IAAMQ,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,MAAM,EAAE;AACNG,IAAAA,SAAS,EAAE,EADL;AAENC,IAAAA,YAAY,EAAE,EAFR;AAGNC,IAAAA,KAAK,EAAE;AAHD;AADuB,CAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { View, StyleSheet, TouchableOpacity, Image } from 'react-native'\nimport { Button } from 'react-native-paper'\nimport * as WebBrowser from 'expo-web-browser'\nimport * as Analytics from 'expo-firebase-analytics'\n\nexport function MorphResponseView({firstImageRef, setFirstImageRef, secondImageRef, setSecondImageRef, morphResponse, setMorphResponse, isGif}) {\n  \n  function setInitialMorphState () {\n    setFirstImageRef(null)\n    setSecondImageRef(null)\n    setMorphResponse(null)\n  }\n\n  function getMorphResponse() {\n    Analytics.logEvent('ButtonTapped', {\n        name: (isGif ? 'GetMorphSequence' : 'GetMorph'),\n        screen: 'main',\n        purpose: 'Begin the morph'\n      })\n      WebBrowser.openBrowserAsync(morphResponse.toString())\n  }\n\n  return (\n    <View style={styles.morphBtnArea}>\n      <View style={styles.button}>\n        <Button mode=\"outlined\" color=\"white\" onPress={() => getMorphResponse}>\n          View {isGif ? 'GIF' : 'Image'}\n        </Button>\n      </View>\n      <View style={styles.button}>\n        <Button mode=\"outlined\" color='white' onPress={() => setInitialMorphState()}>\n          Restart\n        </Button>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({ \n  button: {\n    marginTop: 40,\n    marginBottom: 40,\n    width: 200,\n  }\n})\n"]},"metadata":{},"sourceType":"module"}