{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/src/components/InfoMessage.jsx\";\nimport React from 'react';\nexport function InfoMessage(_ref) {\n  var firstImageRef = _ref.firstImageRef,\n      secondImageRef = _ref.secondImageRef;\n\n  var _useState = useState('Please upload two images to morph'),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  if (!firstImageRef && secondImageRef) {\n    setInfo('Upload the first image');\n  }\n\n  if (firstImageRef && !secondImageRef) {\n    setInfo('Upload the second image');\n  }\n\n  if (firstImageRef instanceof Error) {\n    setInfo('First image is invalid. Please upload again.');\n  }\n\n  if (secondImageRef instanceof Error) {\n    setInfo('Second image is invalid. Please upload again.');\n  }\n\n  return React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, info);\n}","map":{"version":3,"sources":["/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/src/components/InfoMessage.jsx"],"names":["React","InfoMessage","firstImageRef","secondImageRef","useState","info","setInfo","Error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,WAAT,OAAsD;AAAA,MAAhCC,aAAgC,QAAhCA,aAAgC;AAAA,MAAjBC,cAAiB,QAAjBA,cAAiB;;AAAA,kBACnCC,QAAQ,CAAC,mCAAD,CAD2B;AAAA;AAAA,MACpDC,IADoD;AAAA,MAC9CC,OAD8C;;AAG3D,MAAI,CAACJ,aAAD,IAAkBC,cAAtB,EAAsC;AACpCG,IAAAA,OAAO,CAAC,wBAAD,CAAP;AACD;;AACD,MAAIJ,aAAa,IAAI,CAACC,cAAtB,EAAsC;AACpCG,IAAAA,OAAO,CAAC,yBAAD,CAAP;AACD;;AACD,MAAIJ,aAAa,YAAYK,KAA7B,EAAoC;AAClCD,IAAAA,OAAO,CAAC,8CAAD,CAAP;AACD;;AACD,MAAIH,cAAc,YAAYI,KAA9B,EAAqC;AACnCD,IAAAA,OAAO,CAAC,+CAAD,CAAP;AACD;;AAEC,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IADL,CADJ;AAKH","sourcesContent":["import React from 'react';\n\nexport function InfoMessage({firstImageRef, secondImageRef}) {\n  const [info, setInfo] = useState('Please upload two images to morph');\n\n  if (!firstImageRef && secondImageRef) {\n    setInfo('Upload the first image')\n  }\n  if (firstImageRef && !secondImageRef) {\n    setInfo('Upload the second image')\n  }\n  if (firstImageRef instanceof Error) {\n    setInfo('First image is invalid. Please upload again.')\n  }\n  if (secondImageRef instanceof Error) {\n    setInfo('Second image is invalid. Please upload again.')\n  }\n\n    return (\n        <Text>\n            {info}\n        </Text>\n    )\n}"]},"metadata":{},"sourceType":"module"}