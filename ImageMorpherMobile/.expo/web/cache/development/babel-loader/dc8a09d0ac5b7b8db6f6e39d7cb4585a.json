{"ast":null,"code":"var _jsxFileName = \"/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/src/components/views/UploadImagesView.jsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ImageUploadButton } from \"../buttons/ImageUploadButton\";\nimport { Switch } from 'react-native-paper';\nimport { MorphButton } from \"../buttons/MorphButton\";\nexport function UploadImagesView(_ref) {\n  var firstImageRef = _ref.firstImageRef,\n      setFirstImageRef = _ref.setFirstImageRef,\n      secondImageRef = _ref.secondImageRef,\n      setSecondImageRef = _ref.setSecondImageRef,\n      morphResponse = _ref.morphResponse,\n      setMorphResponse = _ref.setMorphResponse,\n      isGif = _ref.isGif,\n      setIsGif = _ref.setIsGif;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.uploadImgBtns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.firstUploadImgBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageUploadButton, {\n    imageRef: firstImageRef,\n    setImageRef: setFirstImageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  })), React.createElement(ImageUploadButton, {\n    imageRef: secondImageRef,\n    setImageRef: setSecondImageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.morphBtnArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.morphBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(MorphButton, {\n    isGif: isGif,\n    firstImageRef: firstImageRef,\n    secondImageRef: secondImageRef,\n    morphResponse: morphResponse,\n    setFirstImageRef: setFirstImageRef,\n    setSecondImageRef: setSecondImageRef,\n    setMorphResponse: setMorphResponse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })), React.createElement(Switch, {\n    style: styles.switch,\n    value: isGif,\n    onValueChange: function onValueChange() {\n      return setIsGif(!isGif);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  firstUploadImgBtn: {\n    marginRight: 60,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  uploadImgBtns: {\n    flexDirection: 'row'\n  },\n  morphBtnArea: {\n    marginTop: 100,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  morphBtn: {\n    width: 200,\n    color: 'white'\n  },\n  switch: {\n    marginLeft: 20\n  }\n});","map":{"version":3,"sources":["/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/src/components/views/UploadImagesView.jsx"],"names":["React","useState","ImageUploadButton","Switch","MorphButton","UploadImagesView","firstImageRef","setFirstImageRef","secondImageRef","setSecondImageRef","morphResponse","setMorphResponse","isGif","setIsGif","styles","container","uploadImgBtns","firstUploadImgBtn","morphBtnArea","morphBtn","switch","StyleSheet","create","marginRight","justifyContent","alignItems","flexDirection","marginTop","width","color","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, Text } from 'react-native'\n\nimport { ImageUploadButton } from '../buttons/ImageUploadButton'\nimport { Switch } from 'react-native-paper'\nimport { MorphButton } from '../buttons/MorphButton'\n\nexport function UploadImagesView ({firstImageRef, setFirstImageRef, secondImageRef, setSecondImageRef, morphResponse, setMorphResponse, isGif, setIsGif}) {\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.uploadImgBtns}>\n        <View style={styles.firstUploadImgBtn}>\n          <ImageUploadButton\n            imageRef={firstImageRef}\n            setImageRef={setFirstImageRef}\n          />\n        </View>\n        <ImageUploadButton\n          imageRef={secondImageRef}\n          setImageRef={setSecondImageRef}\n        />\n      </View>\n      <View style={styles.morphBtnArea}>\n        <View style={styles.morphBtn}>\n          <MorphButton\n            isGif={isGif}\n            firstImageRef={firstImageRef}\n            secondImageRef={secondImageRef}\n            morphResponse={morphResponse}\n      \n            setFirstImageRef={setFirstImageRef}\n            setSecondImageRef={setSecondImageRef}\n            setMorphResponse={setMorphResponse} \n          />\n        </View>\n        <Switch\n          style={styles.switch}\n          value={isGif}\n          onValueChange={() => setIsGif(!isGif)}\n        />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  firstUploadImgBtn: {\n    marginRight: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  uploadImgBtns: {\n    flexDirection: 'row',\n  },\n  morphBtnArea: {\n    marginTop: 100,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  morphBtn: {\n    width: 200,\n    color: 'white',\n  },\n  switch: {\n    marginLeft: 20,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}