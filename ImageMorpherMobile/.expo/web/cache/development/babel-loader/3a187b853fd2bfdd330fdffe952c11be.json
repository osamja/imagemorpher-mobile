{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/src/components/views/UploadImagesView.jsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { MorphImageButton } from \"../buttons/MorphImageButton\";\nimport { ImageUploadButton } from \"../buttons/ImageUploadButton\";\nimport { MorphSequenceButton } from \"../buttons/MorphSequenceButton\";\nimport { Switch } from 'react-native-paper';\nimport { MorphButton } from \"../buttons/MorphButton\";\nexport function UploadImagesView(_ref) {\n  var firstImageRef = _ref.firstImageRef,\n      setFirstImageRef = _ref.setFirstImageRef,\n      secondImageRef = _ref.secondImageRef,\n      setSecondImageRef = _ref.setSecondImageRef,\n      morphResponse = _ref.morphResponse,\n      setMorphResponse = _ref.setMorphResponse;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isGif = _useState2[0],\n      setIsGif = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.uploadImgBtns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.firstUploadImgBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageUploadButton, {\n    imageRef: firstImageRef,\n    setImageRef: setFirstImageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  })), React.createElement(ImageUploadButton, {\n    imageRef: secondImageRef,\n    setImageRef: setSecondImageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.morphBtnArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(MorphButton, {\n    isGif: isGif,\n    firstImageRef: firstImageRef,\n    secondImageRef: secondImageRef,\n    morphResponse: morphResponse,\n    setFirstImageRef: setFirstImageRef,\n    setSecondImageRef: setSecondImageRef,\n    setMorphResponse: setMorphResponse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), React.createElement(Switch, {\n    value: isGif,\n    onValueChange: function onValueChange() {\n      return setIsGif(!isGif);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  firstUploadImgBtn: {\n    marginRight: 60,\n    justifyContent: 'center'\n  },\n  uploadImgBtns: {\n    flexDirection: 'row'\n  },\n  morphBtnArea: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/src/components/views/UploadImagesView.jsx"],"names":["React","useState","MorphImageButton","ImageUploadButton","MorphSequenceButton","Switch","MorphButton","UploadImagesView","firstImageRef","setFirstImageRef","secondImageRef","setSecondImageRef","morphResponse","setMorphResponse","isGif","setIsGif","styles","container","uploadImgBtns","firstUploadImgBtn","morphBtnArea","StyleSheet","create","marginRight","justifyContent","flexDirection"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,gBAAT;AACA,SAASC,iBAAT;AACA,SAASC,mBAAT;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,WAAT;AAEA,OAAO,SAASC,gBAAT,OAAkI;AAAA,MAAtGC,aAAsG,QAAtGA,aAAsG;AAAA,MAAvFC,gBAAuF,QAAvFA,gBAAuF;AAAA,MAArEC,cAAqE,QAArEA,cAAqE;AAAA,MAArDC,iBAAqD,QAArDA,iBAAqD;AAAA,MAAlCC,aAAkC,QAAlCA,aAAkC;AAAA,MAAnBC,gBAAmB,QAAnBA,gBAAmB;;AAAA,kBAE7GZ,QAAQ,CAAC,KAAD,CAFqG;AAAA;AAAA,MAEhIa,KAFgI;AAAA,MAEzHC,QAFyH;;AAIvI,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AACE,IAAA,QAAQ,EAAEX,aADZ;AAEE,IAAA,WAAW,EAAEC,gBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAOE,oBAAC,iBAAD;AACE,IAAA,QAAQ,EAAEC,cADZ;AAEE,IAAA,WAAW,EAAEC,iBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAaE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACI,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,aAAa,EAAEN,aAFjB;AAGE,IAAA,cAAc,EAAEE,cAHlB;AAIE,IAAA,aAAa,EAAEE,aAJjB;AAME,IAAA,gBAAgB,EAAEH,gBANpB;AAOE,IAAA,iBAAiB,EAAEE,iBAPrB;AAQE,IAAA,gBAAgB,EAAEE,gBARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEC,KADT;AAEE,IAAA,aAAa,EAAE;AAAA,aAAMC,QAAQ,CAAC,CAACD,KAAF,CAAd;AAAA,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAbF,CADF;AAgCD;AAED,IAAME,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,iBAAiB,EAAE;AACjBI,IAAAA,WAAW,EAAE,EADI;AAEjBC,IAAAA,cAAc,EAAE;AAFC,GADY;AAK/BN,EAAAA,aAAa,EAAE;AACbO,IAAAA,aAAa,EAAE;AADF,GALgB;AAQ/BL,EAAAA,YAAY,EAAE;AACZK,IAAAA,aAAa,EAAE;AADH;AARiB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet } from 'react-native'\n\nimport { MorphImageButton } from '../buttons/MorphImageButton'\nimport { ImageUploadButton } from '../buttons/ImageUploadButton'\nimport { MorphSequenceButton } from '../buttons/MorphSequenceButton'\nimport { Switch } from 'react-native-paper'\nimport { MorphButton } from '../buttons/MorphButton'\n\nexport function UploadImagesView ({firstImageRef, setFirstImageRef, secondImageRef, setSecondImageRef, morphResponse, setMorphResponse}) {\n\n  const [isGif, setIsGif] = useState(false)\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.uploadImgBtns}>\n        <View style={styles.firstUploadImgBtn}>\n          <ImageUploadButton\n            imageRef={firstImageRef}\n            setImageRef={setFirstImageRef}\n          />\n        </View>\n        <ImageUploadButton\n          imageRef={secondImageRef}\n          setImageRef={setSecondImageRef}\n        />\n      </View>\n      <View style={styles.morphBtnArea}>\n        <MorphButton\n          isGif={isGif}\n          firstImageRef={firstImageRef}\n          secondImageRef={secondImageRef}\n          morphResponse={morphResponse}\n    \n          setFirstImageRef={setFirstImageRef}\n          setSecondImageRef={setSecondImageRef}\n          setMorphResponse={setMorphResponse} \n        />\n        <Switch\n          value={isGif}\n          onValueChange={() => setIsGif(!isGif)}\n        />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  firstUploadImgBtn: {\n    marginRight: 60,\n    justifyContent: 'center',\n  },\n  uploadImgBtns: {\n    flexDirection: 'row',\n  },\n  morphBtnArea: {\n    flexDirection: 'row',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}