{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/App.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { LinearGradient } from 'expo-linear-gradient';\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      morphedImage = _useState2[0],\n      setMorphedImage = _useState2[1];\n\n  var getPage = function getPage() {\n    if (morphedImage) {\n      return React.createElement(ViewMorphedImage, {\n        morphedImg: morphedImage,\n        setMorphedImg: setMorphedImg,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return React.createElement(Home, {\n      morphedImg: morphedImage,\n      setMorphedImg: setMorphedImg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return React.createElement(LinearGradient, {\n    colors: ['#c2e9fb', '#a1c4fd'],\n    style: styles.background,\n    start: [0, 0],\n    end: [1, 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Face Morpher\"), getPage);\n  return React.createElement(ViewMorphedImage, {\n    morphedImg: morphedImg,\n    setMorphedImg: setMorphedImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1\n  },\n  morphArea: {\n    bottom: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n  title: {\n    marginTop: 30,\n    fontSize: 40,\n    textAlign: 'center',\n    color: '#2b2b2b',\n    fontWeight: 'bold',\n    fontFamily: 'Roboto'\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  reset: {\n    width: 40,\n    height: 40,\n    margin: 25\n  }\n});","map":{"version":3,"sources":["/Users/zuby/Desktop/imagemorpher-mobile/ImageMorpherMobile/App.js"],"names":["React","useState","LinearGradient","App","morphedImage","setMorphedImage","getPage","setMorphedImg","styles","background","title","morphedImg","StyleSheet","create","flex","morphArea","bottom","justifyContent","alignItems","marginTop","fontSize","textAlign","color","fontWeight","fontFamily","container","flexDirection","reset","width","height","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,eAAe,SAASC,GAAT,GAAgB;AAAA;;AAAA,kBAEWF,QAAQ,CAAC,IAAD,CAFnB;AAAA;AAAA,MAEtBG,YAFsB;AAAA,MAERC,eAFQ;;AAI7B,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QAAIF,YAAJ,EAAkB;AAChB,aAAO,oBAAC,gBAAD;AAAkB,QAAA,UAAU,EAAEA,YAA9B;AAA4C,QAAA,aAAa,EAAEG,aAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WAAO,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAEH,YAAlB;AAAgC,MAAA,aAAa,EAAEG,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAED,GAND;;AASA,SACE,oBAAC,cAAD;AAEA,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAFR;AAGA,IAAA,KAAK,EAAEC,MAAM,CAACC,UAHd;AAIA,IAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,CAJP;AAKA,IAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,EAQGJ,OARH,CADF;AAcA,SACE,oBAAC,gBAAD;AACE,IAAA,UAAU,EAAEK,UADd;AAEE,IAAA,aAAa,EAAEJ,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD;AAED,IAAMC,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,UAAU,EAAE;AACVK,IAAAA,IAAI,EAAE;AADI,GADmB;AAI/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITJ,IAAAA,IAAI,EAAE;AAJG,GAJoB;AAU/BJ,EAAAA,KAAK,EAAE;AACLS,IAAAA,SAAS,EAAE,EADN;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,SAAS,EAAE,QAHN;AAILC,IAAAA,KAAK,EAAE,SAJF;AAKLC,IAAAA,UAAU,EAAE,MALP;AAMLC,IAAAA,UAAU,EAAE;AANP,GAVwB;AAkB/BC,EAAAA,SAAS,EAAE;AACTX,IAAAA,IAAI,EAAE,CADG;AAETY,IAAAA,aAAa,EAAE;AAFN,GAlBoB;AAwB/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,MAAM,EAAE;AAHH;AAxBwB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Text, View, StyleSheet, TouchableOpacity, Image } from 'react-native'\nimport { LinearGradient } from 'expo-linear-gradient'\n\nexport default function App () {\n\n  const [morphedImage, setMorphedImage] = useState(null);\n\n  const getPage = () => {\n    if (morphedImage) {\n      return <ViewMorphedImage morphedImg={morphedImage} setMorphedImg={setMorphedImg} /> \n    }\n    return <Home morphedImg={morphedImage} setMorphedImg={setMorphedImg} /> \n    \n  }\n\n\n  return (\n    <LinearGradient\n    // Background Linear Gradient\n    colors={['#c2e9fb', '#a1c4fd']}\n    style={styles.background}\n    start={[0, 0]}\n    end={[1, 1]}\n    >\n      <Text style={styles.title}>Face Morpher</Text>\n      {getPage}\n    </LinearGradient>\n  )\n\n  // If morph image was successful, allow user to generate morph sequence\n  return (\n    <ViewMorphedImage\n      morphedImg={morphedImg}\n      setMorphedImg={setMorphedImg}\n    />\n  )\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1\n  },\n  morphArea: {\n    bottom: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n  title: {\n    marginTop: 30,\n    fontSize: 40,\n    textAlign: 'center',\n    color: '#2b2b2b',\n    fontWeight: 'bold',\n    fontFamily: 'Roboto'\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    // alignItems: 'center',\n    // justifyContent: 'center'\n  },\n  reset: {\n    width: 40,\n    height: 40,\n    margin: 25\n  }\n})\n"]},"metadata":{},"sourceType":"module"}