{"version":3,"file":"FirebaseAnalyticsJS.types.js","sourceRoot":"","sources":["../src/FirebaseAnalyticsJS.types.ts"],"names":[],"mappings":"","sourcesContent":["export type FirebaseAnalyticsJSCodedEvent = { [key: string]: any };\n\nexport interface FirebaseAnalyticsJSConfig {\n  /**\n   * **(Required)** Measurement-Id as found in the web Firebase-config.\n   * The format is G-XXXXXXXXXX.\n   */\n  measurementId?: string;\n}\n\nexport interface FirebaseAnalyticsJSOptions {\n  /**\n   * **(Required)** Anonymously identifies a particular user, device, or browser instance.\n   * For the web, this is generally stored as a first-party cookie with a two-year expiration.\n   * For mobile apps, this is randomly generated for each particular instance of an application install.\n   * The value of this field should be a random UUID (version 4) as described in http://www.ietf.org/rfc/rfc4122.txt.\n   * https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#cid\n   */\n  clientId: string;\n\n  /**\n   * **(Required)** Unique Id that identifies this session.\n   * https://support.google.com/firebase/answer/9191807\n   */\n  sessionId: string;\n\n  /**\n   * A parameter associated with each event that occurs within a session that identifies the ordinal\n   * position of a session as it relates to a user, e.g., a user's 1st or 5th session.\n   * https://support.google.com/firebase/answer/9191807\n   */\n  sessionNumber?: number;\n\n  /**\n   * Max cache time in msec (default = 5000).\n   * Caches events fired within a certain time-frame and then\n   * sends them to the Google Measurement API in a single batch.\n   */\n  maxCacheTime?: number;\n\n  /**\n   * Enables debug-mode (default = false).\n   * When enabled shows the events in the DebugView in the Firebase console.\n   * https://firebase.google.com/docs/analytics/debugview#reporting\n   */\n  debug?: boolean;\n\n  /**\n   * Enables strict data format checks for logEvent and setUserProperties.\n   * When enabled, causes `logEvent` and `setUserProperties` to strictly check\n   * whether any event- names & values and user-properties conform to the\n   * native SDK requirements.\n   */\n  strictNativeEmulation?: boolean;\n\n  /**\n   * Document title (e.g. \"My Awesome Page\").\n   * This is a browser specific field.\n   * https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#dt\n   */\n  docTitle?: string;\n\n  /**\n   * Document location URL (e.g. \"https://myawesomeapp.com\").\n   * This is a browser specific field.\n   * https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#dl\n   */\n  docLocation?: string;\n\n  /**\n   * Screen-resolution in the format \"WxH\" (e.g \"2000x1440\").\n   * This is a browser specific field.\n   * https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#sr\n   */\n  screenRes?: string;\n\n  /**\n   * Application name (e.g. \"My Awesome App\").\n   * This is a mobile app specific field.\n   * https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#an\n   */\n  appName?: string;\n\n  /**\n   * Application version (e.g. \"1.2\").\n   * This is a mobile app specific field.\n   * https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#av\n   */\n  appVersion?: string;\n\n  /**\n   * User language (e.g. \"en-us\").\n   * https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#ul\n   */\n  userLanguage?: string;\n\n  /**\n   * Origin (default =  \"firebase\").\n   */\n  origin?: string;\n\n  /**\n   * Custom query arguments that are appended to the POST request that is send to the\n   * Google Measurement API v2.\n   *\n   * @example\n   * ```\n   * const analytics = new FirebaseAnalyticsJS(config, {\n   *   appName: 'My Awesome App',\n   *   customArg: {\n   *     vp: '123x456', // Add viewport-size\n   *     sd: '24-bits' // Add screen-colors\n   *   }\n   * });\n   * ```\n   */\n  customArgs?: { [key: string]: any };\n\n  /**\n   * HTTP headers that are appended to the POST request.\n   *\n   * @example\n   * ```\n   * const analytics = new FirebaseAnalyticsJS(config, {\n   *   appName: 'My Awesome App',\n   *   headers: {\n   *     'user-agent': 'MyAwesomeHTTPClient/1.2.3'\n   *   }\n   * });\n   * ```\n   */\n  headers?: { [key: string]: any };\n}\n"]}